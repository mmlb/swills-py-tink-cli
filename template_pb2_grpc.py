# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import template_pb2 as template__pb2


class TemplateServiceStub(object):
    """
    TemplateService exposes capabilities to manipulate templates.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTemplate = channel.unary_unary(
                '/github.com.tinkerbell.tink.protos.template.TemplateService/CreateTemplate',
                request_serializer=template__pb2.WorkflowTemplate.SerializeToString,
                response_deserializer=template__pb2.CreateResponse.FromString,
                )
        self.GetTemplate = channel.unary_unary(
                '/github.com.tinkerbell.tink.protos.template.TemplateService/GetTemplate',
                request_serializer=template__pb2.GetRequest.SerializeToString,
                response_deserializer=template__pb2.WorkflowTemplate.FromString,
                )
        self.DeleteTemplate = channel.unary_unary(
                '/github.com.tinkerbell.tink.protos.template.TemplateService/DeleteTemplate',
                request_serializer=template__pb2.GetRequest.SerializeToString,
                response_deserializer=template__pb2.Empty.FromString,
                )
        self.ListTemplates = channel.unary_stream(
                '/github.com.tinkerbell.tink.protos.template.TemplateService/ListTemplates',
                request_serializer=template__pb2.ListRequest.SerializeToString,
                response_deserializer=template__pb2.WorkflowTemplate.FromString,
                )
        self.UpdateTemplate = channel.unary_unary(
                '/github.com.tinkerbell.tink.protos.template.TemplateService/UpdateTemplate',
                request_serializer=template__pb2.WorkflowTemplate.SerializeToString,
                response_deserializer=template__pb2.Empty.FromString,
                )


class TemplateServiceServicer(object):
    """
    TemplateService exposes capabilities to manipulate templates.
    """

    def CreateTemplate(self, request, context):
        """
        CreateTemplate stores a template in the Tinkerbell server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTemplate(self, request, context):
        """
        GetTemplate returns a specific template via its identifier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTemplate(self, request, context):
        """
        DeleteTemplate deletes a template via its identifier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTemplates(self, request, context):
        """
        ListTemplates returns all the template stored in Tinkerbell server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTemplate(self, request, context):
        """
        UpdateTemplate updates a template
        TODO: Read the code and figure out how an update work
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TemplateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTemplate,
                    request_deserializer=template__pb2.WorkflowTemplate.FromString,
                    response_serializer=template__pb2.CreateResponse.SerializeToString,
            ),
            'GetTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTemplate,
                    request_deserializer=template__pb2.GetRequest.FromString,
                    response_serializer=template__pb2.WorkflowTemplate.SerializeToString,
            ),
            'DeleteTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTemplate,
                    request_deserializer=template__pb2.GetRequest.FromString,
                    response_serializer=template__pb2.Empty.SerializeToString,
            ),
            'ListTemplates': grpc.unary_stream_rpc_method_handler(
                    servicer.ListTemplates,
                    request_deserializer=template__pb2.ListRequest.FromString,
                    response_serializer=template__pb2.WorkflowTemplate.SerializeToString,
            ),
            'UpdateTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTemplate,
                    request_deserializer=template__pb2.WorkflowTemplate.FromString,
                    response_serializer=template__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.tinkerbell.tink.protos.template.TemplateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TemplateService(object):
    """
    TemplateService exposes capabilities to manipulate templates.
    """

    @staticmethod
    def CreateTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.tinkerbell.tink.protos.template.TemplateService/CreateTemplate',
            template__pb2.WorkflowTemplate.SerializeToString,
            template__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.tinkerbell.tink.protos.template.TemplateService/GetTemplate',
            template__pb2.GetRequest.SerializeToString,
            template__pb2.WorkflowTemplate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.tinkerbell.tink.protos.template.TemplateService/DeleteTemplate',
            template__pb2.GetRequest.SerializeToString,
            template__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/github.com.tinkerbell.tink.protos.template.TemplateService/ListTemplates',
            template__pb2.ListRequest.SerializeToString,
            template__pb2.WorkflowTemplate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.tinkerbell.tink.protos.template.TemplateService/UpdateTemplate',
            template__pb2.WorkflowTemplate.SerializeToString,
            template__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
